// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"push-cash/v2/pkg/types"
	"push-cash/v2/pkg/utils"
	"time"
)

type Account struct {
	// the account number (mask)
	NumberMask string `json:"number_mask"`
	// the routing number for the account
	Routing string `json:"routing"`
}

func (o *Account) GetNumberMask() string {
	if o == nil {
		return ""
	}
	return o.NumberMask
}

func (o *Account) GetRouting() string {
	if o == nil {
		return ""
	}
	return o.Routing
}

type Card struct {
	// the expiration date for the card
	Expiration types.Date `json:"expiration"`
	// the primary account number (mask)
	PrimaryAccountNumberMask string `json:"primary_account_number_mask"`
}

func (c Card) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *Card) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *Card) GetExpiration() types.Date {
	if o == nil {
		return types.Date{}
	}
	return o.Expiration
}

func (o *Card) GetPrimaryAccountNumberMask() string {
	if o == nil {
		return ""
	}
	return o.PrimaryAccountNumberMask
}

// PaymentCredential - The array will be empty until the user completes their first transaction. Additional transactions will utilize stored payment credentials
type PaymentCredential struct {
	Account Account `json:"account"`
	// the name of the bank associated with the credential
	BankName string `json:"bank_name"`
	Card     Card   `json:"card"`
	// Datetime for when the payment credential was created for the user
	CreatedAt time.Time `json:"created_at"`
}

func (p PaymentCredential) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(p, "", false)
}

func (p *PaymentCredential) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &p, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *PaymentCredential) GetAccount() Account {
	if o == nil {
		return Account{}
	}
	return o.Account
}

func (o *PaymentCredential) GetBankName() string {
	if o == nil {
		return ""
	}
	return o.BankName
}

func (o *PaymentCredential) GetCard() Card {
	if o == nil {
		return Card{}
	}
	return o.Card
}

func (o *PaymentCredential) GetCreatedAt() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.CreatedAt
}
