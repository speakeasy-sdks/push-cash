// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"push-cash/pkg/models/shared"
	"push-cash/pkg/utils"
	"time"
)

type ListUsersRequest struct {
	// Return users created after this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp.
	CreatedAtAfter *time.Time `queryParam:"style=form,explode=true,name=created_at.after"`
	// Return users created before this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp.
	CreatedAtBefore *time.Time `queryParam:"style=form,explode=true,name=created_at.before"`
}

func (l ListUsersRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(l, "", false)
}

func (l *ListUsersRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &l, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *ListUsersRequest) GetCreatedAtAfter() *time.Time {
	if o == nil {
		return nil
	}
	return o.CreatedAtAfter
}

func (o *ListUsersRequest) GetCreatedAtBefore() *time.Time {
	if o == nil {
		return nil
	}
	return o.CreatedAtBefore
}

// ListUsers200ApplicationJSON - successful operation
type ListUsers200ApplicationJSON struct {
	Data []shared.User `json:"data"`
	// Use cursor for paginating list endpoints in conjunction with the cursor request parameter.
	//
	NextCursor string `json:"next_cursor"`
}

func (o *ListUsers200ApplicationJSON) GetData() []shared.User {
	if o == nil {
		return []shared.User{}
	}
	return o.Data
}

func (o *ListUsers200ApplicationJSON) GetNextCursor() string {
	if o == nil {
		return ""
	}
	return o.NextCursor
}

type ListUsersResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// Error
	Error *shared.Error
	// successful operation
	ListUsers200ApplicationJSONObject *ListUsers200ApplicationJSON
}

func (o *ListUsersResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *ListUsersResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *ListUsersResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *ListUsersResponse) GetError() *shared.Error {
	if o == nil {
		return nil
	}
	return o.Error
}

func (o *ListUsersResponse) GetListUsers200ApplicationJSONObject() *ListUsers200ApplicationJSON {
	if o == nil {
		return nil
	}
	return o.ListUsers200ApplicationJSONObject
}
